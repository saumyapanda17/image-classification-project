{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saumy\\\\Desktop\\\\IMAGE CLASSIFIER PROJECT\\\\frontend\\\\src\\\\components\\\\Classifier\\\\Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button, Alert, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Classifier extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      files: [],\n      isLoading: false,\n      recentImage: null\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        files: [],\n        isLoading: true,\n        recentImage: null\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files[0].name);\n        });\n      }, 1000);\n    };\n\n    this.activateSpinner = () => {\n      this.setState({\n        files: [],\n        isLoading: true\n      });\n    };\n\n    this.deactivateSpinner = () => {\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.sendImage = () => {\n      this.activateSpinner();\n      let formData = new FormData();\n      formData.append('picture', this.state.files[0], this.state.files[0].name);\n      axios.post('http://127.0.0.1:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        this.getImageClass(resp);\n        console.log(resp.data.id);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getImageClass = obj => {\n      axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          recentImage: resp\n        });\n        console.log(resp);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.deactivateSpinner();\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onDrop,\n      accept: \"image/png, image/jpeg\",\n      children: _ref => {\n        let {\n          isDragActive,\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'dropzone back'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-image mb-2 text-muted\",\n              style: {\n                fontSize: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: isDragActive ? \"Drop some images \" : \"Drag & Drop an Image or Click HERE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            size: \"lg\",\n            className: \"mt-3\",\n            onClick: this.sendImage,\n            children: \"CLASSIFY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), this.state.recentImage && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"primary\",\n              children: this.state.recentImage.data.classified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: \"justify-content-center\",\n              src: this.state.recentImage.data.picture,\n              height: \"200\",\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Classifier;","map":{"version":3,"names":["React","Component","Dropzone","Spinner","Button","Alert","Image","axios","Classifier","state","files","isLoading","recentImage","onDrop","setState","loadImage","setTimeout","console","log","name","activateSpinner","deactivateSpinner","sendImage","formData","FormData","append","post","headers","then","resp","getImageClass","data","id","catch","err","obj","get","render","map","file","size","isDragActive","getRootProps","getInputProps","className","fontSize","length","classified","picture"],"sources":["C:/Users/saumy/Desktop/IMAGE CLASSIFIER PROJECT/frontend/src/components/Classifier/Classifier.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport './Classifier.css'\r\nimport {Spinner, Button, Alert, Image} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nclass Classifier extends Component {\r\n    state = { \r\n        files: [],\r\n        isLoading: false,\r\n        recentImage: null,\r\n     }\r\n\r\n     onDrop =(files) =>{\r\n        this.setState({\r\n            files:[],\r\n            isLoading: true,\r\n            recentImage:null\r\n            })\r\n        this.loadImage(files)\r\n     }\r\n\r\n     loadImage=(files)=>{\r\n         setTimeout(() => {\r\n             this.setState({\r\n                 files,\r\n                 isLoading: false\r\n             }, () => {\r\n                console.log(this.state.files[0].name)\r\n             })\r\n         }, 1000);\r\n     }\r\n\r\n     activateSpinner = () => {\r\n         this.setState({\r\n             files:[],\r\n             isLoading:true,\r\n            })\r\n     }\r\n\r\n     deactivateSpinner=()=> {\r\n        this.setState({isLoading:false})\r\n     }\r\n\r\n     sendImage =()=> {\r\n         this.activateSpinner()\r\n         let formData = new FormData()\r\n         formData.append('picture', this.state.files[0], this.state.files[0].name)\r\n         axios.post('http://127.0.0.1:8000/api/images/', formData, {\r\n             headers: {\r\n                'accept': 'application/json',\r\n                'content-type': 'multipart/form-data'\r\n             }\r\n         })\r\n         .then(resp=>{\r\n             this.getImageClass(resp)\r\n             console.log(resp.data.id)\r\n         })\r\n         .catch(err=>{\r\n             console.log(err)\r\n         })\r\n     }\r\n\r\n     getImageClass =(obj)=> {\r\n         axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\r\n             headers: {\r\n                'accept': 'application/json',\r\n             }\r\n         })\r\n         .then(resp=>{\r\n             this.setState({recentImage:resp})\r\n             console.log(resp)\r\n         })\r\n         .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        this.deactivateSpinner()\r\n\r\n     }\r\n     \r\n    render() { \r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n              {file.name} - {file.size} bytes\r\n            </li>\r\n          ));\r\n        return ( \r\n            <Dropzone onDrop={this.onDrop} accept='image/png, image/jpeg'>\r\n            {({isDragActive, getRootProps, getInputProps}) => (\r\n              <section className=\"container\">\r\n                <div {...getRootProps({className: 'dropzone back'})}>\r\n                  <input {...getInputProps()} />\r\n                  <i className=\"far fa-image mb-2 text-muted\" style={{fontSize:100}}></i>\r\n                  <p className='text-muted'>{isDragActive ? \"Drop some images \" : \"Drag & Drop an Image or Click HERE\"}</p>\r\n                </div>\r\n                <aside>\r\n                  {files}\r\n                </aside>\r\n\r\n                {this.state.files.length >0 &&\r\n                <Button variant='dark' size='lg' className='mt-3' onClick={this.sendImage}>CLASSIFY</Button>\r\n                }\r\n\r\n                {this.state.isLoading &&\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                }\r\n\r\n                {this.state.recentImage &&\r\n                <React.Fragment>\r\n                    <Alert variant='primary'>\r\n                        {this.state.recentImage.data.classified}\r\n                    </Alert>\r\n                    <Image className='justify-content-center' src={this.state.recentImage.data.picture} height='200' rounded/>\r\n                </React.Fragment>\r\n                }\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Classifier;"],"mappings":"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"},"metadata":{},"sourceType":"module"}