{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saumy\\\\Desktop\\\\IMAGE CLASSIFIER PROJECT\\\\frontend\\\\src\\\\components\\\\ImageList\\\\ImageList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Image from './Image';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageLIst extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      visible: 2,\n      isLoading: true,\n      newLoaded: false,\n      status: false\n    };\n\n    this.getImages = () => {\n      axios.get('http://127.0.0.1:8000/api/images/', {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          images: resp.data,\n          status: true\n        });\n        console.log(resp);\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleVisible = () => {\n      const visible = this.state.visible;\n      const new_visible = visible + 2;\n      this.setState({\n        newLoaded: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: new_visible,\n          newLoaded: false\n        });\n      }, 300);\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(this.getImages, 1500);\n  }\n\n  render() {\n    const images = this.state.images.slice(0, this.state.visible).map(img => {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        pic: img.picture,\n        name: img.classified\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [this.state.images.length === 0 && this.state.status && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No images classified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), images, this.state.newLoaded && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), this.state.images.length > this.state.visible && this.state.images.length > 2 && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mb-3\",\n          variant: \"primary\",\n          size: \"lg\",\n          onClick: this.handleVisible,\n          children: \"Load more images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), this.state.images.length <= this.state.visible && this.state.images.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-3\",\n          children: \"END OF LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ImageLIst;","map":{"version":3,"names":["React","Component","axios","Image","Button","Spinner","ImageLIst","state","images","visible","isLoading","newLoaded","status","getImages","get","headers","then","resp","setState","data","console","log","handleVisible","new_visible","setTimeout","componentDidMount","render","slice","map","img","picture","classified","id","length"],"sources":["C:/Users/saumy/Desktop/IMAGE CLASSIFIER PROJECT/frontend/src/components/ImageList/ImageList.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport Image from './Image';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\n\r\nclass ImageLIst extends Component {\r\n    state = { \r\n        images: [],\r\n        visible: 2,\r\n        isLoading: true,\r\n        newLoaded: false,\r\n        status: false,\r\n     }\r\n\r\n     componentDidMount() {\r\n         setTimeout(this.getImages, 1500)\r\n     }\r\n\r\n     getImages = () =>{\r\n         axios.get('http://127.0.0.1:8000/api/images/', {\r\n             headers: {\r\n                 'accept': 'application/json'\r\n             }\r\n         }).then(resp=>{\r\n             this.setState({\r\n                 images: resp.data,\r\n                 status: true,\r\n                })\r\n             console.log(resp)\r\n         })\r\n         this.setState({isLoading:false})\r\n    }\r\n    handleVisible =()=>{\r\n        const visible = this.state.visible\r\n        const new_visible = visible + 2\r\n        this.setState({newLoaded:true})\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible:new_visible,\r\n                newLoaded:false,\r\n            })\r\n        }, 300);\r\n    }\r\n\r\n    render() { \r\n        const images = this.state.images.slice(0, this.state.visible).map(img=>{\r\n            return <Image key={img.id} pic={img.picture} name={img.classified} />\r\n        })\r\n        return ( \r\n            <div>\r\n                {this.state.isLoading ?\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                :\r\n                    <React.Fragment>\r\n                        {((this.state.images.length === 0) && (this.state.status)) &&\r\n                        <h3>No images classified</h3>\r\n                        }\r\n                        {images}\r\n                        {this.state.newLoaded &&\r\n                        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                        }\r\n                        <br />\r\n                        {((this.state.images.length > this.state.visible) && (this.state.images.length >2)) &&\r\n                        <Button className=\"mb-3\" variant='primary' size='lg' onClick={this.handleVisible}>Load more images</Button>\r\n                        }\r\n                        {((this.state.images.length <= this.state.visible) && (this.state.images.length>0)) &&\r\n                        <h3 className=\"mb-3\">END OF LIST</h3>\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ImageLIst;"],"mappings":"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"},"metadata":{},"sourceType":"module"}